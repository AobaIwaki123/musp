openapi: 3.0.0
info:
  title: MuSP API
  version: "1.0.0"
  description: |
    MuSP is a web application that downloads audio from YouTube links and separates the audio and vocals using Demucs.
    This API specification provides endpoints for job creation, status checking, and retrieving separated audio files.
servers:
  - url: http://localhost:8000
security:
  - ApiKeyAuth: []

tags:
  - name: GET
    description: Retrieval operations
  - name: POST
    description: Creation operations
paths:
  /video:
    post:
      tags:
        - POST
      summary: Create a new job
      description: Creates a job to download audio from a YouTube link and separate the audio and vocals.
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostVideoRequest"
      responses:
        "200":
          description: The video is already registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostVideoResponse"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse400"
  /{user_id}:
    get:
      tags:
        - GET
      summary: Retrieve a list of YouTube IDs and Wav URLs for a user
      description: Retrieves a list of YouTube IDs and Wav URLs created by a user.
      security:
        - ApiKeyAuth: []
      parameters:
        - $ref: "#/components/parameters/UserID"
      responses:
        "200":
          description: Retrieved the list of YouTube IDs and Wav URLs for the user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetVideoIDAndWavURLResponse"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse400"
  /users:
    post:
      tags:
        - POST
      summary: Register user information
      description: Registers user information.
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostUserRequest"
      responses:
        "200":
          description: User already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostUserResponse"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse400"

components:
  parameters:
    UserID:
      name: user_id
      in: path
      description: User ID
      required: true
      schema:
        type: string
        maximum: 100
      example: testUser
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    PostVideoRequest:
      type: object
      example:
        user_id: "testUser"
        youtube_url: "https://www.youtube.com/watch?v=57Q4Hp46oXc"
      properties:
        user_id:
          type: string
          description: User ID
          maximum: 100
        youtube_url:
          type: string
          description: YouTube video link
          pattern: /^(?:https?://)?(?:www\.)?(?:youtube\.com/(?:watch\?.*v=|embed/|v/)|youtu\.be/)([a-zA-Z0-9_-]{11})/
          maximum: 100
      required:
        - user_id
        - youtube_url
      additionalProperties: false
    PostVideoResponse:
      type: object
      example:
        status_code: 200
        status_message: "The video is already registered"
        youtube_id: "57Q4Hp46oXc"
      properties:
        status_code:
          type: integer
          description: Status code
        status_message:
          type: string
          description: Status message
          maximum: 500
        youtube_id:
          type: string
          description: YouTube video ID
          pattern: ^[a-zA-Z0-9_-]{11}$
          maximum: 11
      required:
        - status_code
        - status_message
        - youtube_id
      additionalProperties: false
    VideoIDAndWavURL:
      type: object
      properties:
        youtube_id:
          type: string
          description: YouTube video ID
          pattern: ^[a-zA-Z0-9_-]{11}$
          maximum: 11
        wav_url:
          type: string
          format: uri
          description: Separated audio file URL
          maximum: 200
      required:
        - youtube_id
      additionalProperties: false
    GetVideoIDAndWavURLResponse:
      type: object
      example:
        status_code: 200
        status_message: "Retrieved the list of YouTube IDs and Wav URLs for the user"
        data:
          - youtube_id: "57Q4Hp46oXc"
            wav_url: "https://example.com/wav.wav"
          - youtube_id: "57Q4Hp46oXc"
            wav_url: null
      properties:
        status_code:
          type: integer
          description: Status code
        status_message:
          type: string
          description: Status message
          maximum: 500
        data:
          type: array
          items:
            $ref: "#/components/schemas/VideoIDAndWavURL"
      required:
        - status_code
        - status_message
        - data
      additionalProperties: false
    PostUserRequest:
      type: object
      example:
        google_id: "testGoogleID"
      properties:
        google_id:
          type: string
          description: Google user ID
          maximum: 100
      required:
        - google_id
      additionalProperties: false
    PostUserResponse:
      type: object
      example:
        status_code: 200
        status_message: "User already exists"
        user_id: "testUser"
      properties:
        status_code:
          type: integer
          description: Status code
        status_message:
          type: string
          description: Status message
          maximum: 500
        user_id:
          type: string
          description: User ID
          maximum: 100
      required:
        - status_code
        - status_message
        - user_id
      additionalProperties: false
    ErrorResponse400:
      type: object
      properties:
        error:
          type: string
          description: Error message
          maximum: 500
      required:
        - error
      additionalProperties: false
